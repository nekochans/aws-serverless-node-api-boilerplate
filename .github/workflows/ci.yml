name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build And Test
    runs-on: ubuntu-latest
    env:
      MIGRATION_DSN: ${{ secrets.MIGRATION_DSN }}
      MIGRATION_TEST_DSN: ${{ secrets.MIGRATION_TEST_DSN }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [14.x, 15.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          yarn install
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker set up
        run: |
          docker-compose up --build -d
      - name: Execute test
        run: |
          yarn run lint
          docker-compose exec -T mysql service mysql status
          docker-compose exec -T migrate migrate -source file://./migrations -database '$MIGRATION_DSN' up
          yarn run test
